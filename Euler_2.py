# Each new term in the Fibonacci sequence is generated by adding the previous two terms. 
# By starting with 1 and 2, the first 10 terms will be: 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
# By considering the terms in the Fibonacci sequence whose values do not exceed four million,
# find the sum of the even-valued terms.

initial_Fib = [1,2] # starting with values 1,2 already in a list
even_Fib = []
index = 1

while initial_Fib[index] < 4000000: # ensuring the values do not exceed four million as required
    next = initial_Fib[index] + initial_Fib[index - 1]
    initial_Fib.append(next)
    if initial_Fib[index] % 2 == 0: # ensuring only even-valued terms are used for the sum
        even_Fib.append(initial_Fib[index])
    index += 1

print(str(even_Fib)) # just a check to be sure I have only the numbers I expect in my list
finalAns = sum(even_Fib)
print(finalAns)
